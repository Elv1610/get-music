{"version":3,"sources":["assets/images/Spinner-1s-200px.gif","components/Common/Loader/index.js","components/Common/Loader/Loader.js","constants/app_secrets.js","components/Login/index.js","components/Login/Login.js","components/Navbar/index.js","components/Navbar/Navbar.js","components/Common/CustomCard/CustomCard.js","components/Common/CustomCard/index.js","components/Dashboard/index.js","components/Dashboard/Dashboard.js","components/ArtistAlbums/index.js","components/ArtistAlbums/ArtistAlbums.js","components/AlbumTracks/index.js","components/AlbumTracks/AlbumTracks.js","components/Common/ProfileRow/index.js","components/Common/ProfileRow/ProfileRow.js","components/UserProfile/index.js","components/UserProfile/UserProfile.js","components/Main.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Loader","react_default","a","createElement","className","src","spinner","alt","spotifyProfileURL","spotifySearchURL","spotifyArtistURL","spotifyAlbumURL","spotifyPlaylistURL","Login","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","componentDidMount","url","window","location","href","indexOf","authToken","split","trim","setState","authorized","console","log","state","handleAuthFlow","event","preventDefault","user","axios","get","then","response","profile","data","history","push","current_user","auth","catch","error","assign","loading","value","Header","as","color","Button","onClick","Common_Loader","Component","Navbar","Image","imageURL","avatar","List","link","Item","react_router_dom","to","pathname","userData","styles","imageStyles","maxWidth","minHeight","maxHeight","trackStyles","overFlow","CustomCard","_ref","name","id","text","Card","key","style","Content","Dashboard","captureSearch","searchTerm","query","searchSpotifyArtists","artists","concat","items","length","showArtistResults","undefined","results","map","artist","index","images","hasImage","Common_CustomCard","searchAlbums","artistId","albums","cleanName","replace","_this2","_this$props$location$","display_name","components_Navbar","onSubmit","Input","type","icon","placeholder","onChange","target","marginTop","ArtistAlbums","showAlbums","album","getAlbumTracks","albumId","tracks","_this$props$location$2","AlbumTracks","showTracks","track","ReactPlayer_default","preview_url","playing","width","height","backgroundColor","padding","controls","config","file","forceAudio","albumNameCleanedUp","match","params","albumName","ProfileRow","Group","fluid","header","UserProfile","play_lists","componentWillMount","routeBack","goBack","renderPlaylist","playList","item","email","total","followers","size","Common_ProfileRow","Main","react_router","exact","path","component","App","Fragment","components_Main","Boolean","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.654c085c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Spinner-1s-200px.5a3498d4.gif\";","import Loader from './Loader';\r\n\r\nexport default Loader;","import React from 'react';\r\nimport spinner from'../../../assets/images/Spinner-1s-200px.gif';\r\nimport './Loader.css';\r\n\r\nconst Loader = () => (\r\n  <div className=\"loader-container\">\r\n    <div className=\"loader-text\">\r\n      <img src={spinner} alt=\"loader spinner\"/>\r\n    </div>\r\n  </div>\r\n)\r\n\r\nexport default Loader;","export const spotifyProfileURL = \"https://api.spotify.com/v1/me?access_token=\";\r\nexport const spotifySearchURL = \"https://api.spotify.com/v1/search?q=\";\r\nexport const spotifyArtistURL = \"https://api.spotify.com/v1/artists/\";\r\nexport const spotifyAlbumURL = \"https://api.spotify.com/v1/albums/\";\r\nexport const spotifyPlaylistURL = \"https://api.spotify.com/v1/me/playlists?access_token=\";\r\n","import Login from './Login';\r\n\r\nexport default Login;","import React, { Component } from 'react';\r\nimport { Button, Header } from 'semantic-ui-react';\r\nimport Loader from '../Common/Loader';\r\nimport axios from \"axios\";\r\nimport {\r\n  spotifyProfileURL\r\n} from \"../../constants\";\r\nimport './Login.css';\r\n\r\nclass Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      value: \"Get Music\",\r\n      authToken: \"\",\r\n      authorized: false,\r\n      profile: [],\r\n      loading: false\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"header-container\">\r\n          <Header as='h1' color=\"yellow\">\r\n            {this.state.value}\r\n          </Header>\r\n          <span className=\"subtitle\">\r\n            una React App connessa alle API di Spotify\r\n          </span>\r\n        </div>\r\n        <div>\r\n          <div className=\"login_button-container\">\r\n            <p>\r\n              {this.state.authorized\r\n                ? \"Autorizzato con successo! Clicca per entrare\"\r\n                : \"Clicca il bottone per autorizzare il tuo account Spotify ad utilizzare Get Music!\"}\r\n            </p>\r\n              <Button color='teal' onClick={this.handleAuthFlow}>\r\n              {\r\n                this.state.authorized\r\n                ? \"Vai a Get Music\"\r\n                : \"Log in con Spotify\"\r\n              }\r\n              </Button>\r\n              {\r\n                this.state.loading ?\r\n               <Loader/> :\r\n               null\r\n              }\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    let url = window.location.href;\r\n    if (url.indexOf(\"token=\") > -1) {\r\n      let authToken = url\r\n        .split(\"token=\")[1]\r\n        .split(\"&\")[0]\r\n        .trim();\r\n      let authorized = true;\r\n      this.setState({\r\n        authToken,\r\n        authorized\r\n      });\r\n      console.log(this.state)\r\n    }\r\n  };\r\n\r\n  handleAuthFlow = event => {\r\n    event.preventDefault();\r\n    if (this.state.authorized) {\r\n      const { authToken } = this.state;\r\n      let user;\r\n      axios\r\n        .get(spotifyProfileURL + authToken)\r\n        .then(response => {\r\n          this.setState({ profile: response.data });\r\n          user = response.data;\r\n          //console.log(this.state);\r\n        })\r\n        .then(() => this.props.history.push('/get-music', {\r\n          current_user: { user },\r\n          auth: { authToken }\r\n        }))\r\n        .catch(error => {\r\n          console.log(error);\r\n          window.location.assign(\"https://get-music-mybackend.herokuapp.com/login\");\r\n        });\r\n    } else {\r\n      this.setState({ loading: true });\r\n      window.location=\"https://get-music-mybackend.herokuapp.com/login\";\r\n    }\r\n  };\r\n}\r\n\r\nexport default Login;","import Navbar from './Navbar';\r\n\r\nexport default Navbar;","import React, { Component } from 'react';\r\nimport { Image } from 'semantic-ui-react';\r\nimport { Link } from 'react-router-dom';\r\nimport { List } from 'semantic-ui-react';\r\nimport './Navbar.css';\r\n\r\nclass Navbar extends Component {\r\n\r\n  render() {\r\n    //console.log('props in nav', this.props)\r\n    return (\r\n        <nav className=\"navbar\">\r\n          <div className=\"nav-content-container\">\r\n            <Image className=\"nav-image\" src={this.props.imageURL} avatar />\r\n            <List as=\"ul\" link className=\"ul-list\">\r\n              <List.Item className=\"nav-link\">\r\n                <Link className=\"nav-link\" to=\"/\">\r\n                  Get Music\r\n                </Link>\r\n              </List.Item>\r\n              <List.Item className=\"nav-link\">\r\n                <Link \r\n                  className=\"nav-link\" \r\n                  to={{\r\n                    pathname: \"/user-profile\",\r\n                    state: { \r\n                      userData: this.props.location.state.current_user.user,\r\n                      auth: this.props.location.state.auth\r\n                    }\r\n                  }}\r\n                >\r\n                  Il mio profilo\r\n                </Link>\r\n              </List.Item>\r\n            </List>\r\n          </div>\r\n        </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport { Card, Image, Button } from 'semantic-ui-react';\r\nimport './CustomCard.css';\r\n\r\nconst CustomCard = ({ imageURL, name, id, onClick, text }) => {\r\n  if (imageURL) {\r\n      return (\r\n        <Card className=\"card\" key={id}>\r\n            <Image \r\n              className=\"card-img-top\" \r\n              src={imageURL} \r\n              style={styles.imageStyles} \r\n            />\r\n            <Card.Content className=\"content-container\">\r\n              <Card.Header className=\"card-header\">{name}</Card.Header>\r\n              <Button \r\n                href=\"#\" \r\n                className=\"card-btn\"\r\n                onClick={onClick}\r\n                color=\"blue\"\r\n              >\r\n                {text}\r\n              </Button>   \r\n            </Card.Content>\r\n        </Card>\r\n      )\r\n  } else {\r\n      return (\r\n        <div className=\"card-container\" key={id}>\r\n          <div className=\"card-body\" style={styles.trackStyles}>\r\n            <h4 className=\"card-title\">{name}</h4>\r\n            <p className=\"card-text\" />            \r\n          </div>\r\n        </div>\r\n      ) \r\n    }\r\n}\r\n\r\nconst styles = {\r\n  imageStyles: {\r\n      maxWidth: 280,\r\n      minHeight: 200,\r\n      maxHeight: 200\r\n  },\r\n  trackStyles: {\r\n      minHeight: 60,\r\n      overFlow: 'hidden'\r\n  }\r\n}\r\n\r\nexport default CustomCard;","import CustomCard from './CustomCard';\r\n\r\nexport default CustomCard;","import Dashboard from './Dashboard';\r\n\r\nexport default Dashboard;","import React, { Component } from 'react';\r\nimport Navbar from '../Navbar';\r\nimport { Button, Input, Header } from 'semantic-ui-react';\r\nimport { spotifySearchURL, spotifyArtistURL } from '../../constants';\r\nimport CustomCard from '../Common/CustomCard';\r\nimport axios from 'axios';\r\nimport './Dashboard.css';\r\n\r\nclass Dashboard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n        current_user: [],\r\n        query: '',\r\n        artists: [],\r\n        albums: [],\r\n        error: ''\r\n      }        \r\n    }\r\n\r\n  render() {\r\n    const { images, display_name } = this.props.location.state.current_user.user;\r\n    //console.log(this.props.location.state)\r\n    return (\r\n      <div className=\"main-container\">\r\n        <Navbar\r\n          imageURL={images[0].url} \r\n          display_name={display_name}\r\n          {...this.props}\r\n        />\r\n        <div className=\"form-container\">\r\n          <Header as=\"h1\" className=\"\">Cerca artista</Header>\r\n          <div className=\"\">\r\n            <form onSubmit={this.searchSpotifyArtists} className=\"\">\r\n              <div className=\"input-container\">\r\n                <Input \r\n                  type=\"text\"\r\n                  icon='search' \r\n                  placeholder=\"enter artist name\" \r\n                  onChange={event => {\r\n                      this.captureSearch(event.target.value);\r\n                      this.setState({ error: ''});\r\n                    }\r\n                  }\r\n                  value={this.state.query} \r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <Button \r\n                  type=\"submit\"\r\n                  color='teal'\r\n                >\r\n                  Invia\r\n                </Button>\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <p style={{color: '#e74c3c', marginTop: '20px'}}>\r\n                  {this.state.error}\r\n                </p>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          {this.showArtistResults(this.state.artists.items)}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    const { current_user } = this.props.location.state;\r\n    if (current_user) {\r\n      this.setState({ current_user })\r\n    } else {\r\n      this.props.history.push('/')\r\n    }\r\n  }\r\n\r\n  captureSearch = (searchTerm) => {\r\n    this.setState({ query: searchTerm });\r\n  }\r\n\r\n  searchSpotifyArtists = (event) => {\r\n    event.preventDefault();\r\n    const { authToken } = this.props.location.state.auth;\r\n    let artists;\r\n    axios.get(`${spotifySearchURL}${this.state.query}&type=artist&access_token=${authToken}`)\r\n    .then(response => {\r\n        artists = response.data.artists;\r\n        if (artists.items.length !== 0) {\r\n          this.setState({artists, error: ''});\r\n        } else {\r\n          this.setState({artists, error: 'La ricerca non ha prodotto nessun risultato'});\r\n        }\r\n    })\r\n    .catch(error => {\r\n        this.setState({ \r\n            error: 'Errore! Riprova più tardi',\r\n            artists: []\r\n        })\r\n    })\r\n  }\r\n\r\n  showArtistResults = (artists) => {\r\n    if (artists !== undefined) {            \r\n        let results = [];\r\n        artists.map((artist, index) => {\r\n          if (artist.images[0] !== undefined) {\r\n            let hasImage = artist.images[0];\r\n            results.push(\r\n              <div className=\"card-container\" key={index}>\r\n                <CustomCard \r\n                  name={artist.name}\r\n                  id={artist.id}\r\n                  imageURL={hasImage.url}\r\n                  onClick={(event) => this.searchAlbums(event, artist.id, artist.name)}\r\n                  text=\"Mostra Albums\"                                                     \r\n                />\r\n              </div>\r\n            )\r\n          }             \r\n        })\r\n      return results\r\n    } else {\r\n      return <p></p>\r\n    }\r\n  }\r\n\r\n  searchAlbums = (event, artistId, name) => {\r\n    event.preventDefault();\r\n    const { authToken } = this.props.location.state.auth;        \r\n    let albums;\r\n    let cleanName = name.replace(/[ ]/g,\"-\").replace(/[()]/g,\"\").trim();\r\n    axios.get(`${spotifyArtistURL}${artistId}/albums?album_type=album&access_token=${authToken}`)\r\n      .then(response => {            \r\n        this.setState({ albums: response.data.items });\r\n        albums = response.data.items;            \r\n      })\r\n      .then(()=> this.props.history.push(`/artist-albums/${artistId}/${cleanName}`, { \r\n          data: { albums },\r\n          current_user: { user: this.state.current_user.user },\r\n          auth: { authToken }\r\n        }\r\n      ))\r\n    .catch(error => console.log(error));\r\n  }\r\n}\r\n\r\nexport default Dashboard;","import ArtistAlbums from './ArtistAlbums';\r\n\r\nexport default ArtistAlbums;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport Navbar from '../Navbar';\r\nimport CustomCard from '../Common/CustomCard';\r\nimport { spotifyAlbumURL } from '../../constants';\r\nimport './ArtistAlbums.css';\r\n\r\nclass ArtistAlbums extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      current_user: [],\r\n      tracks: []\r\n  };\r\n}\r\n\r\nrender() {\r\n  const { \r\n    data: { \r\n      albums \r\n    }, \r\n    current_user: { \r\n      user: { \r\n        images, \r\n        display_name \r\n      } \r\n    } \r\n  } = this.props.location.state;\r\n\r\n  return (\r\n    <div>\r\n      <Navbar \r\n        imageURL={images[0].url} \r\n        display_name={display_name}\r\n        {...this.props} \r\n      />\r\n      <div className=\"row\">\r\n        <p>\r\n          Risultati album per { albums[0].artists[0].name}\r\n        </p>\r\n      </div>\r\n      <div className=\"row\">\r\n        {this.showAlbums(albums)}\r\n      </div>\r\n    </div>\r\n    )\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    const { current_user } = this.props.location.state;\r\n    if (current_user) {\r\n      this.setState({ current_user })\r\n    } else {\r\n      this.props.history.push('/')\r\n    }\r\n  }\r\n\r\n  showAlbums = (albums) => {\r\n    if (albums !== undefined) {           \r\n      let results = [];\r\n      albums.map((album, index) => {\r\n        if(album.images[0] !== undefined) {\r\n          let hasImage = album.images[0];\r\n          results.push(\r\n            <div className=\"card-container\" key={index}>\r\n              <CustomCard \r\n                name={album.name}\r\n                id={album.id}\r\n                imageURL={hasImage.url}\r\n                onClick={event => this.getAlbumTracks(event, album.id, album.name)}\r\n                text=\"Mostra tracce\"                                                     \r\n              />\r\n            </div>\r\n          )\r\n        }             \r\n      })\r\n      return results\r\n    } else {\r\n      return <p></p>\r\n    }\r\n  }\r\n\r\ngetAlbumTracks = (event, albumId, name) => {\r\n    event.preventDefault();\r\n    const { authToken } = this.props.location.state.auth;     \r\n    let tracks;\r\n    let cleanName = name.replace(/[ ]/g,\"-\").replace(/[()]/g,\"\").trim();\r\n    axios.get(`${spotifyAlbumURL}${albumId}/tracks?access_token=${authToken}`)\r\n    .then(response => {            \r\n      this.setState({ tracks: response.data.items });\r\n      tracks = response.data.items;            \r\n    })\r\n    .then(()=> this.props.history.push(`/album-tracks/${albumId}/${cleanName}`, { \r\n        data: { tracks },\r\n        current_user: { user: this.state.current_user.user },\r\n        auth: { authToken }\r\n      }\r\n    ))\r\n    .catch(error => console.log(error));\r\n  }\r\n}\r\n\r\nexport default ArtistAlbums;\r\n","import AlbumTracks from './AlbumTracks';\r\n\r\nexport default AlbumTracks;","import React, { Component } from 'react'\r\nimport ReactPlayer from 'react-player'; \r\nimport Navbar from '../Navbar';\r\nimport CustomCard from \"../Common/CustomCard\";\r\nimport './AlbumTracks.css';\r\n\r\nclass AlbumTracks extends Component {\r\n  constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n\r\n      }\r\n  }\r\n    \r\n  render() {\r\n    console.log(\"this.props in Tracks\", this.props);\r\n    const { data: { tracks }, current_user: { user: { images, display_name } } } = this.props.location.state;\r\n    const albumNameCleanedUp = this.props.match.params.albumName.replace(/[-]/g,\" \").trim();\r\n    return (\r\n      <div>\r\n        <Navbar \r\n          imageURL={images[0].url}  \r\n          display_name={display_name} \r\n          {...this.props}\r\n        />\r\n        <div className=\"justify-content-center mt-5 row\">\r\n          <p className=\"text-center display-5\">\r\n            Tracce dell'album { albumNameCleanedUp }\r\n          </p>\r\n        </div>\r\n        <div className=\"show-tracks-container\">\r\n          {this.showTracks(tracks)}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  showTracks = (tracks) => {\r\n    if (tracks !== undefined) {\r\n      console.log('tracks inside showTracks',tracks)\r\n      let results = [];\r\n      let inherit = 'inherit';\r\n      tracks.map((track, index) => { \r\n        results.push(\r\n          <div className=\"tracks-card-container\" key={index}>\r\n            <CustomCard \r\n              name={track.name}\r\n              id={track.id}                                                                                                         \r\n            />\r\n            <ReactPlayer \r\n              url={track.preview_url} \r\n              playing={false}\r\n              width={inherit}\r\n              height={80}\r\n              style={{backgroundColor: '#2185d0', padding: '10px'}}                            \r\n              controls={true}\r\n              config={{\r\n                file:{\r\n                  forceAudio: true\r\n                }\r\n              }}                            \r\n            />                        \r\n          </div>\r\n        )                          \r\n      })\r\n      return results\r\n    } else {\r\n      return <p></p>\r\n    }\r\n  }\r\n}\r\n\r\nexport default AlbumTracks;","import ProfileRow from './ProfileRow';\r\n\r\nexport default ProfileRow;","import React from 'react';\r\nimport { Card } from 'semantic-ui-react';\r\nimport './ProfileRow.css';\r\n\r\nconst ProfileRow = ({ text }) => {\r\n    return (\r\n      <Card.Group className=\"profile-row\">\r\n        <Card color='teal' fluid header={text}/>\r\n      </Card.Group>\r\n    )\r\n}\r\n\r\nexport default ProfileRow;","import UserProfile from './UserProfile';\r\n\r\nexport default UserProfile;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport ProfileRow from '../Common/ProfileRow';\r\nimport { Button, Image, Header } from 'semantic-ui-react';\r\nimport { spotifyPlaylistURL } from '../../constants';\r\nimport './UserProfile.css';\r\n\r\nclass UserProfile extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      userData: [],\r\n      auth: '',\r\n      play_lists: [],\r\n      error: ''\r\n    };\r\n  }\r\n\r\nrender() {\r\n  console.log(this.state);\r\n    const { \r\n      images, \r\n      display_name, \r\n      email, \r\n      followers: { \r\n        total \r\n      } \r\n    } = this.props.location.state.userData;\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"back-button-container\">\r\n          <Button onClick={this.routeBack} color=\"yellow\" size=\"tiny\" className=\"btn btn-outline-success\">Back</Button>\r\n        </div>\r\n        <div className=\"user-heading-container\">\r\n          <Image\r\n            avatar\r\n            src={images[0].url} \r\n            alt=\"spotify user profile image\" \r\n            className=\"\"\r\n          />\r\n          <Header as='h1' className=\"user-name-text\">\r\n            {display_name}\r\n          </Header>                \r\n        </div>\r\n        <div className=\"profile-rows\">\r\n          <ProfileRow text={email} />\r\n          <ProfileRow text={`${total} followers`} />\r\n          <Header as='h1' className=\"playlists-text\">\r\n            Public Playlists\r\n          </Header>   \r\n        </div>\r\n        <div className=\"row mt-3\">\r\n          {this.renderPlaylist()}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    axios.get(`${spotifyPlaylistURL}${this.state.auth.authToken}`)\r\n    .then(response => {\r\n        this.setState({\r\n          play_lists: response.data.items\r\n        })\r\n    })\r\n    .catch(error => {\r\n      console.log(error);\r\n      this.setState({ error })\r\n    })\r\n  }\r\n\r\n  componentWillMount = () => {\r\n    this.setState({\r\n      userData: this.props.location.state.userData,\r\n      auth: this.props.location.state.auth\r\n    });\r\n  }\r\n\r\n  routeBack = (event) => {\r\n    event.preventDefault();\r\n    this.props.history.goBack()\r\n  }\r\n\r\n  renderPlaylist = () => {\r\n      if (this.state.play_lists.length) {\r\n        const { play_lists } = this.state;\r\n        let playList = [];\r\n        play_lists.map((item, index) => {\r\n          playList.push(\r\n            <div className=\"\" key={index}>\r\n              <Image \r\n                src={item.images[0].url}\r\n                className=\"\"\r\n                style={{maxWidth: 300, maxHeight: 300}}\r\n              />\r\n            </div>\r\n          )\r\n        })\r\n        return playList\r\n      } else {\r\n        return <p>Nessuna Playlist trovata...</p>\r\n      }\r\n  }\r\n}\r\n\r\nexport default UserProfile;","import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport Login from './Login';\r\nimport Dashboard from './Dashboard';\r\nimport ArtistAlbums from \"./ArtistAlbums\";\r\nimport AlbumTracks from './AlbumTracks';\r\nimport UserProfile from \"./UserProfile\";\r\n\r\nconst Main = () => (\r\n  <main>\r\n    <Switch>\r\n      <Route exact path='/' component={Login}/>\r\n      <Route path='/get-music' component={Dashboard}/>\r\n      <Route path='/artist-albums/:artistId/:artistName' component={ArtistAlbums} />\r\n      <Route path='/album-tracks/:albumId/:albumName' component={AlbumTracks} />\r\n      <Route path='/user-profile' component={UserProfile} />\r\n    </Switch>\r\n  </main>\r\n)\r\n\r\nexport default Main;","import React, { Component } from 'react';\nimport Main from './components/Main';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <React.Fragment>\n        <Main />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'semantic-ui-css/semantic.min.css';\nimport './semantic/dist/semantic.min.css';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>\n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}